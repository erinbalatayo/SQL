#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

/* How to deal with messy data: NULL values, blanks, or ... 
Use the WHERE clause to specify the lenght of the value or <> to exclude specific phrases such as "Order ID"
IS NOT NULL is also valid

EXAMPLE below:

SELECT *
FROM BIT_DB.customers
WHERE length(order_id)=6
AND order_id<>'Order ID'; */

/* 1. How many orders were placed in January? */
SELECT count(*)
FROM BIT_DB.JanSales
WHERE length(orderid)=6
AND orderid<>'Order ID';

/* #2. How many of those orders were for an iPhone? */
SELECT count(*)
FROM BIT_DB.JanSales
WHERE length(orderid)=6 
    AND orderid<>'Order ID'
    AND product LIKE '%iPhone%';

/* 3. Select the customer account numbers for all the orders that were placed in February. */
SELECT distinct acctnum
FROM BIT_DB.customers c
INNER JOIN BIT_DB.FebSales f
ON c.order_id=f.orderid
WHERE length(orderid)=6
    AND orderid<>'Order ID';

/* 4. Which product was the cheapest one sold in January, and what was the price? */
SELECT product, price
FROM BIT_DB.JanSales
ORDER BY price ASC
LIMIT 1;

/* 5. What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products). */
SELECT product, round(SUM(quantity)*price, 2) AS revenue 
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY revenue DESC;

/* 6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue? */
SELECT product, quantity, round(SUM(quantity)*price, 2) as revenue 
FROM BIT_DB.FebSales 
WHERE location='548 Lincoln St, Seattle, WA 98101';


/* 7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers? */
SELECT count(acctnum), AVG(quantity*price) AS avg_spent
FROM BIT_DB.customers c
inner JOIN BIT_DB.FebSales f
ON c.order_id=f.orderid
WHERE quantity>2
    AND length(orderid)=6
    AND orderid<>'Order ID';

/* 8. List all products sold in Los Angeles in February, and include how many of each were sold */
SELECT product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY product;



/* The below queries is freelance investigation */
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00'

SELECT location
FROM BIT_DB.FebSales
WHERE orderdate = '02/18/19 01:35'

SELECT sum(quantity)
FROM BIT_DB.FebSales
WHERE orderdate like '02/18/19%'


/* 9.  Which locations in New York received at least 3 orders in January, and how many orders did they each receive? */

SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE length(orderid)=6 
    AND orderID<>"Order ID"
    AND location LIKE "%NY%"
GROUP BY location
HAVING count(orderID)>2;

/* 10. How many of each type of headphone were sold in February? */ 

SELECT product, sum(quantity)
FROM BIT_DB.FebSales
WHERE length(orderID)=6
    AND orderID<>'Order ID'
    AND product LIKE '%headphone%'
GROUP BY product;

/* 11. What was the average amount spent per account in February? */ 

SELECT avg(quantity*price) 
FROM BIT_DB.customers c
LEFT JOIN BIT_DB.FebSales f
ON c.order_id=f.orderid
WHERE length(orderid)=6
    AND orderid<> 'Order ID';

/* 12. What was the average quantity of products purchased per account in February?  */

SELECT sum(quantity)/count(acctnum)
FROM BIT_DB.Customers c
LEFT JOIN BIT_DB.FebSales f
ON c.order_id=f.orderid
WHERE length(orderid)=6
    AND orderid<> 'Order ID';
    
/* 13. Which product brought in the most revenue in January and how much revenue did it bring in total? */ 

SELECT product, ROUND(sum(quantity*price),2) AS 'revenue'
FROM BIT_DB.JanSales
WHERE length (orderid)=6
    AND orderid<> 'Order ID'
GROUP BY product
ORDER BY round(sum(quantity*price),2)DESC
LIMIT 1;



